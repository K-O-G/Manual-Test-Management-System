@using Domain.Helpers
@model Domain.Entities.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "Login", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserEmail, "E-mail", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserEmail, new {@class = "form-control", pattern = @"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"})
                @Html.ValidationMessageFor(model => model.UserEmail, "", new {@class = "text-danger"})
            </div>
        </div>
        @Html.HiddenFor(model=>model.UserPassword)
        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, "Password", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.PasswordFor(model => model.UserPassword, new {@class = "form-control", value = @Model.UserPassword})
                @Html.ValidationMessageFor(model => model.UserPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        @if (Repository.CurrentUser.UserAdmin)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserAdmin, "Admin right", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox" style="left:1%">
                        @Html.EditorFor(model => model.UserAdmin)
                        @Html.ValidationMessageFor(model => model.UserAdmin, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserTestCreator, "Test Creator right", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox" style="left:1%">
                        @Html.EditorFor(model => model.UserTestCreator)
                        @Html.ValidationMessageFor(model => model.UserTestCreator, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserTestExecutor, "Test Executor right", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox" style="left:1%">
                        @Html.EditorFor(model => model.UserTestExecutor)
                        @Html.ValidationMessageFor(model => model.UserTestExecutor, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }
        @if (!Repository.CurrentUser.UserAdmin)
        {
            @Html.HiddenFor(model => model.UserAdmin)
            @Html.HiddenFor(model => model.UserTestCreator)
            @Html.HiddenFor(model => model.UserTestExecutor)
        }


        <div class="form-group" style=" margin-left: 10%; max-width: 22.5%;">
            @Html.ActionLink("Back to List", "Index", null, new{@class="btn btn-default pull-left"})
            <input type="submit" value="Save" class="btn btn-success pull-right"/>
        </div>
    </div>
}