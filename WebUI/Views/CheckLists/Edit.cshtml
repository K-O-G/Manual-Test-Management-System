@using Domain.Entities
@model Domain.Entities.CheckLists.CheckListEntity

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CheckListEntity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CheckListEntityId)

        <div class="form-group">
            @Html.LabelFor(model => model.CheckListName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckListName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckListName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.CheckListItemIdSuffix, "Suffix to ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckListItemIdSuffix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckListItemIdSuffix, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Priority.PriorityId, ViewBag.Priorities as SelectList)
            </div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Components, "Components", htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        @{
            List<Component> components = ViewBag.Components;
            foreach (var c in components)
            {
                <input type="checkbox" name="selectedComponents" value="@c.ComponentId"
                       @(Model.Components.Contains(c) ? "checked=\"checked\"" : "") />@c.ComponentName <br />
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "CheckLists")
</div>
