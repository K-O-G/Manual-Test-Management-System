@model Domain.Entities.TestResult

@{
    ViewBag.Title = "Create New Test Result";
}


<h2>Create new Test Result</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TestResultValue, "Test Result", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestResultValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestResultValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestResultDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestResultDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestResultDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TestResultColor, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TestResultColor, new { id = "color", @class = "form-control", type="color" })
                @Html.ValidationMessageFor(model => model.TestResultColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Back to List", "TestResultsList", null, new { @class = "btn btn-default pull-left" })
            <input type="submit" value="Create" class="btn btn-success pull-right" />
        </div>
    </div>
}

